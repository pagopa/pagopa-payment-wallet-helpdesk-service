openapi: 3.0.3
info:
  title: pagoPA payment wallet helpdesk API
  description: pagoPA payment wallet helpdesk API
  version: 1.0.0
  contact:
    name: pagoPA - Touchpoints team
tags:
  - name: helpdesk
    description: Api's to be exposed to helpdesk team
    externalDocs:
      url: https://pagopa.atlassian.net/wiki/spaces/PPR/pages/749371770/NW+-+Design+di+dettaglio
      description: Technical specifications
  - name: internalApi
    description: Internal api's (such as running service informatio)
    externalDocs:
      url: https://pagopa.atlassian.net/wiki/spaces/PPR/pages/749371770/NW+-+Design+di+dettaglio
      description: Technical specifications
externalDocs:
  url: https://pagopa.atlassian.net/wiki/spaces/PPR/pages/749371770/NW+-+Design+di+dettaglio
  description: Design review
paths:
  /info:
    get:
      operationId: getServiceInfo
      tags:
        - internalApi
      description: |-
        Get information about this service.
        Currently returns just the version number.
      responses:
        '200':
          description: Service informations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
  
  /helpdesk/wallets/{userId}:
    get:
      operationId: getWallets
      tags:
        - helpdesk
      description: Retrieve wallets associated to an user id
      summary: Retrieve wallets associated to an user id
      parameters:
      - in: path
        name: userId
        required: true
        description: User ID
        schema:
          type: string
      - in: query
        name: status
        required: false
        description: Filter searched wallet by status
        schema:
         $ref: '#/components/schemas/WalletStatus'
      - in: query
        name: type
        required: false
        description: Filter searched wallet by type
        schema:
          $ref: '#/components/schemas/WalletType'
      responses:
        '200':
          description: Wallet details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletsDetails'
        '400':
          description: Formally invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
              example:
                title: Bad request
                status: 400
                detail: Invalid input request
        '404':
          description: No wallet found for input search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
              example:
                title: Not found
                status: 404
                detail: No wallet found for input search criteria
        '500':
          description: Internal Server Error handling command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
              example:
                title: Internal Server Error
                status: 500
                detail: There was an error processing the request
components:
  schemas:
    ServiceInfo:
      type: object
      description: Service information
      properties:
        version:
          type: string
          description: The running service version
      required:
        - version
      example:
        version: "1.0.0"
    WalletsDetails:
      type: object
      properties:
        wallets:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/WalletDetail'
      required:
        - wallets
    WalletDetail:
      type: object
      properties:
        id: 
          type: string
          description: wallet unique identifier
        status:
          type: string
          description: wallet status
        type:
          $ref: '#/components/schemas/WalletType'
        applications:
          type: array
          minLength: 1
          description: list of all applications for the wallet
          items:
            $ref: '#/components/schemas/WalletApplicationInfo'
        onboardingChannel:
          type: string
          description: the channel from which wallet have been onboarded
      required:
        - id
        - status
        - type
        - applications
        - onboardingChannel
    WalletApplicationInfo:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/WalletApplicationId'
        status:
          $ref: '#/components/schemas/WalletApplicationStatus'
        lastUsage:
          type: string
          format: date-time
      required:
        - name
        - status
    WalletApplicationId:
      type: string
      description: id of the application associated to the wallet
    WalletApplicationStatus:
      type: string
      description: Enumeration of wallet statuses
      enum:
        - ENABLED
        - DISABLED
    WalletType:
      type: string
      description: wallet type
      enum:
        - CARDS
        - PAYPAL
    WalletStatus:
      type: string
      description: Enumeration of wallet statuses
      enum:
        - CREATED
        - INITIALIZED
        - VALIDATION_REQUESTED
        - VALIDATED
        - DELETED
        - ERROR
    ProblemJson:
      description: Body definition for error responses containing failure details
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          $ref: "#/components/schemas/HttpStatusCode"
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
    HttpStatusCode:
      type: integer
      format: int32
      description: |-
        The HTTP status code generated by the origin server for this occurrence
        of the problem.
      minimum: 100
      maximum: 600
      exclusiveMaximum: true
      example: 200
