---
# Source: pagopa-payment-wallet-helpdesk-service/charts/microservice-chart/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: pagopa-pay-wallet-helpdesk-service
  namespace: pay-wallet
  labels:
    helm.sh/chart: microservice-chart-0.0.1
    helm.sh/blueprint-version: 7.1.1
    app.kubernetes.io/name: microservice-chart
    app.kubernetes.io/instance: release-name
    canaryDelivery: "false"
    app.kubernetes.io/version: "0.0.1"
    azure.workload.identity/use: "true"
    app.kubernetes.io/managed-by: Helm
data:
  MONGO_DB_NAME: payment-wallet
  MONGO_HOSTNAME: pagopa-d-itn-pay-wallet-cosmos-account.mongo.cosmos.azure.com
  MONGO_PORT: "10255"
  MONGO_SSL_ENABLED: "true"
  MONGO_USERNAME: pagopa-d-itn-pay-wallet-cosmos-account
---
# Source: pagopa-payment-wallet-helpdesk-service/charts/microservice-chart/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: pagopa-pay-wallet-helpdesk-service
  namespace: pay-wallet
  labels:
    helm.sh/chart: microservice-chart-0.0.1
    helm.sh/blueprint-version: 7.1.1
    app.kubernetes.io/name: microservice-chart
    app.kubernetes.io/instance: release-name
    canaryDelivery: "false"
    app.kubernetes.io/version: "0.0.1"
    azure.workload.identity/use: "true"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: app-port-8080-svc
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: microservice-chart
    app.kubernetes.io/instance: release-name
    canaryDelivery: "false"
---
# Source: pagopa-payment-wallet-helpdesk-service/charts/microservice-chart/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pagopa-pay-wallet-helpdesk-service
  namespace: pay-wallet
  labels:
    helm.sh/chart: microservice-chart-0.0.1
    helm.sh/blueprint-version: 7.1.1
    app.kubernetes.io/name: microservice-chart
    app.kubernetes.io/instance: release-name
    canaryDelivery: "false"
    app.kubernetes.io/version: "0.0.1"
    azure.workload.identity/use: "true"
    app.kubernetes.io/managed-by: Helm
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: microservice-chart
      app.kubernetes.io/instance: release-name
      canaryDelivery: "false"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: microservice-chart
        app.kubernetes.io/instance: release-name
        canaryDelivery: "false"
        
        app.kubernetes.io/version: "0.0.1"
        azure.workload.identity/use: "true"
    spec:
      automountServiceAccountToken: false
      serviceAccountName: default
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: microservice-chart
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          image: "pagopaditncoreacr.azurecr.io/pagopapaymentwallethelpdeskservice:0.0.1"
          imagePullPolicy: Always
          ports:
            - name: app-port-8080
              containerPort: 8080
              protocol: TCP
          #
          # PROBES
          #
          ### LIVENESS
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ls
            initialDelaySeconds: 120
            failureThreshold: 6
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            terminationGracePeriodSeconds: 30
          ### READINESS
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ls
            initialDelaySeconds: 120
            failureThreshold: 6
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
          ### STARTUP
          #
          # RESOURCE
          #
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            #<tmp folders>
            - name: tmp
              mountPath: /tmp
            #</tmp folder>
            #<pvc mount>
            #</pvc mount>
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          env:
            #envConfig
            - name: MONGO_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: pagopa-pay-wallet-helpdesk-service
                  key: MONGO_DB_NAME
            - name: MONGO_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: pagopa-pay-wallet-helpdesk-service
                  key: MONGO_HOSTNAME
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: pagopa-pay-wallet-helpdesk-service
                  key: MONGO_PORT
            - name: MONGO_SSL_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: pagopa-pay-wallet-helpdesk-service
                  key: MONGO_SSL_ENABLED
            - name: MONGO_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: pagopa-pay-wallet-helpdesk-service
                  key: MONGO_USERNAME
            # Secret provider class
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pagopa-pay-wallet-helpdesk-service
                  key: mongo-wallet-password
            #envConfig CANARY
            #envFieldRef
            #external configmap values
      volumes:
        #<tmp volume>
        - name: tmp
          emptyDir: {}
        #</tmp volume>
        # <pvc volume>
        # </pvc volume>
        # <provided>
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: pagopa-pay-wallet-helpdesk-service
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: domain
                operator: In
                values:
                - paywallet
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  aadpodidbinding: pay-wallet-pod-identity
              namespaces:
              - pay-wallet
              topologyKey: topology.kubernetes.io/zone
            weight: 100
      tolerations:
        - effect: NoSchedule
          key: paymentWalletOnly
          operator: Equal
          value: "true"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
---
# Source: pagopa-payment-wallet-helpdesk-service/charts/microservice-chart/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pagopa-pay-wallet-helpdesk-service
  namespace: pay-wallet
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 1m
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
    - host: itndev.pay-wallet.internal.dev.platform.pagopa.it
      http:
        paths:
          - backend:
              service:
                name: pagopa-pay-wallet-helpdesk-service
                port:
                  number: 8080
            path: /pagopa-payment-wallet-helpdesk-service/(.*)
            pathType: ImplementationSpecific
  tls:
    - hosts: [itndev.pay-wallet.internal.dev.platform.pagopa.it]
      secretName: itndev-pay-wallet-internal-dev-platform-pagopa-it
---
# Source: pagopa-payment-wallet-helpdesk-service/charts/microservice-chart/templates/secretproviderclass-kv.yaml
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: pagopa-pay-wallet-helpdesk-service
  namespace: pay-wallet
  labels:
    helm.sh/chart: microservice-chart-0.0.1
    helm.sh/blueprint-version: 7.1.1
    app.kubernetes.io/name: microservice-chart
    app.kubernetes.io/instance: release-name
    canaryDelivery: "false"
    app.kubernetes.io/version: "0.0.1"
    azure.workload.identity/use: "true"
    app.kubernetes.io/managed-by: Helm
spec:
  provider: azure
  secretObjects:
    - secretName: pagopa-pay-wallet-helpdesk-service
      type: Opaque
      data:
      - key: mongo-wallet-password
        objectName: mongo-wallet-password
  parameters:
    usePodIdentity: "false"
    clientID: 
    keyvaultName: pagopa-d-pay-wallet-kv
    tenantId: 7788edaf-0346-4068-9d79-c868aed15b3d
    cloudName: ""
    objects: |
      array:
        - |
          objectName: mongo-wallet-password
          objectType: secret
          objectVersion: ""
